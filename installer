#!/bin/bash

echo "Quick and dirty install of awesome Arch Linux"
echo "Before you START, do partitioning and mount root filesystem to /mnt"
read -p "Let the magic begin..."
MOUNTED=$(mount | grep /mnt)
if [[ $MOUNTED == '' ]]; then
echo "Install root isn't mounted to /mnt"
exit
fi

while [[ $MYHOST1 == '' ]]
do
    read -p "Hostname: " MYHOST1
done
MYHOST=$(echo $MYHOST1 | tr -cd [:alnum:])

system_identify()
{
	if [[ $VM ]]; then
		UCODE=''
	elif grep -q 'AuthenticAMD' /proc/cpuinfo; then
		UCODE="amd-ucode"
	elif grep -q 'GenuineIntel' /proc/cpuinfo; then
		UCODE="intel-ucode"
	fi

	if grep -qi 'apple' /sys/class/dmi/id/sys_vendor; then
		modprobe -r -q efivars
		export MAC="YES"
	else
		modprobe -q efivarfs
		export MAC="NO"
	fi

	if [[ -d /sys/firmware/efi/efivars ]]; then
		export SYS="UEFI"
		grep -q /sys/firmware/efi/efivars /proc/mounts || mount -t efivarfs efivarfs /sys/firmware/efi/efivars
	else
		export SYS="BIOS"
	fi
}

system_identify
echo "System: $SYS"
echo "Macintosh: $MAC"

# Ставим русскую раскладку
loadkeys ru

# Добавим в консоль шрифт, поддерживающий кириллицу
setfont cyr-sun16

#Добавляем русскую локаль
sed -i 's/#ru_RU.UTF-8 UTF-8/ru_RU.UTF-8 UTF-8/g' /etc/locale.gen
locale-gen
export LANG=ru_RU.UTF-8

# Partitioning
#
# 1 - /boot
# 2 - /
# 3 - swap 
# 4 - /home

# Отредактируй команды по разметке ниже или приготовь диск и примонтируй к /mnt сам после чего удали exit :)
#exit

if [[ $SYS == 'BIOS' ]]; then
	echo "Подготовь разметку диска! После этого примонтируй к /mnt и убери exit"
else
	echo "Добавить разделы"
	#parted /dev/sda mklabel gpt
	#parted -a optimal /dev/sda mkpart fat32 2048s 1024.0
	#parted /dev/sda name 1 Boot 
	#parted -a optimal /dev/sda mkpart ext2 1024.0 20G
	#parted /dev/sda name 2 Root
	#parted /dev/sda set 1 boot on
	#parted /dev/sda set 1 esp on
	#mkfs.fat -F32 /dev/sda1
	#mkfs.ext4 /dev/sda2 -L root
	#mount /dev/sda2 /mnt
	#mkdir /mnt/{boot,home}
	#mount /dev/sda1 /mnt/boot
	# mount /dev/sda4 /mnt/home
	# swapon /dev/sda3
fi

# Выбираем ближайшее зеркало для pacman
sed -i '1 i\Server = http://mirror.yandex.ru/archlinux/$repo/os/$arch' /etc/pacman.d/mirrorlist

pacman-key --init
pacman-key --populate archlinux 
pacman-key --refresh-keys

set -xe
 
# Установим базовые пакеты системы.
pacstrap -i /mnt base base-devel linux linux-firmware $UCODE netctl dialog wpa_supplicant wget reflector nfs-utils net-tools rsync sudo git wget yajl xorg-server xorg-xinit gtk-engine-murrine mesa-libgl xterm mesa lightdm lightdm-gtk-greeter xcompmgr autoconf2.13 yasm conky lxappearance geany ttf-liberation ttf-dejavu opendesktop-fonts ttf-bitstream-vera ttf-arphic-ukai ttf-arphic-uming ttf-hanazono gtk-engine-murrine cbatticon xf86-input-synaptics lxterminal transmission-gtk filezilla i3lock scrot imagemagick xautolock mcabber mpv htop dmenu xfce4-screenshooter pulseaudio pulseaudio-alsa procmail poppler lynx mutt terminator alsa-utils moc gmrun tint2 feh acpi mc nano cdparanoia cdrkit p7zip unrar zip openssh openbox obconf faenza-icon-theme pcmanfm file-roller gvfs gnome-menus ntfs-3g dosfstools exfat-utils networkmanager network-manager-applet hicolor-icon-theme gpicview volumeicon truecrypt keepassxc ranger i3-wm i3lock i3blocks i3status xorg-xkill terminus-font redshift zathura links atool bind-tools cmake compton cronie f2fs-tools ffmpegthumbnailer gpart gparted gperf gsimplecal libreoffice-fresh libreoffice-fresh-ru mediainfo mtools mupdf namcap ncdu nmap newsboat ntp odt2txt pass pkgfile qt5ct rpmextract ttf-font-awesome udftools w3m weechat whois youtube-dl firefox-i18n-ru firefox firefox-adblock-plus gsfonts dhcpcd netctl nano man b43-fwcutter broadcom-wl ndiswrapper r8168 nitrogen --noconfirm

if [[ $MAC == 'YES' ]]; then
# Nouveau видеокарта
pacstrap -i /mnt xf86-video-nouveau xorg --noconfirm
else
# Intel видеокарта
pacstrap -i /mnt xf86-video-intel libva-intel-driver --noconfirm
fi
set +xe

# Генерируем fstab, используя следующую команду:
genfstab -p /mnt >> /mnt/etc/fstab

# Работаем в chroot

echo "Добавляем русскую локаль"
sed -i 's/#ru_RU.UTF-8 UTF-8/ru_RU.UTF-8 UTF-8/g' /mnt/etc/locale.gen
sed -i 's/#en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/g' /mnt/etc/locale.gen
arch-chroot /mnt locale-gen

echo "Сортировка pacman mirrorlist"
arch-chroot /mnt /bin/bash -c "reflector --score 120 -l 50 -f 20 --sort rate -c RU --verbose --save /etc/pacman.d/mirrorlist"

# Меняем имя компьютера (myhostname меняем на ваше):
echo "$MYHOST" > /mnt/etc/hostname

echo "Русифицируем нашу систему"
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/etc/locale.conf > /mnt/etc/locale.conf
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/etc/vconsole.conf > /mnt/etc/vconsole.conf

echo "Создание mkinitcpio"
#Добавим русскую локаль в консоль
sed -i "s/block filesystems/block keymap filesystems/g" /mnt/etc/mkinitcpio.conf
# Видеокарта Intel 
#sed -i "s/MODULES=()/MODULES=(i915)/g" /mnt/etc/mkinitcpio.conf
# Видеокарта Nvidia
#sed -i 's/MODULES=() /MODULES=(nouveau)/g' /mnt/etc/mkinitcpio.conf
if [[ $MAC == 'YES' ]]; then
sed -i 's/MODULES=() /MODULES=(nouveau coretemp applesmc)/g' /mnt/etc/mkinitcpio.conf
fi
arch-chroot /mnt /bin/bash -c "mkinitcpio -p linux"

echo "Установка загрузчика"
if [[ $SYS == 'BIOS' ]]; then
	arch-chroot /mnt pacman -S grub-bios --noconfirm
	arch-chroot /mnt /bin/bash -c "grub-install /dev/sda"
	arch-chroot /mnt /bin/bash -c "grub-mkconfig -o /boot/grub/grub.cfg"
fi
if [[ $SYS == 'UEFI' ]]; then
arch-chroot /mnt /bin/bash -c "bootctl install"
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/boot/loader/entries/arch.conf > /mnt/boot/loader/entries/arch.conf
fi

#Настраиваем сеть
arch-chroot /mnt /bin/bash -c "systemctl enable dhcpcd"

echo "Заполнение skel"
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/home/dotbashrc > /mnt/etc/skel/.bashrc
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/home/dotconkyrc > /mnt/etc/skel/.conkyrc
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/home/dotfonts.conf > /mnt/etc/skel/.fonts.conf
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/home/dotgtkrc-2.0 > /mnt/etc/skel/.gtkrc-2.0
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/home/dotprocmailrc > /mnt/etc/skel/.procmailrc
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/home/dotxsession > /mnt/etc/skel/.xsession
mkdir /mnt/etc/skel/.moc
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/home/dotmoc/config > /mnt/etc/skel/.moc/config
mkdir /mnt/etc/skel/.i3
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/home/doti3/config > /mnt/etc/skel/.i3/config
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/home/doti3/conky_maia > /mnt/etc/skel/.i3/conky_maia
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/home/doti3/shortcuts_maia > /mnt/etc/skel/.i3/shortcuts_maia
mkdir /mnt/etc/skel/.mutt
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/home/dotmutt/dotgpg.rc > /mnt/etc/skel/.mutt/.gpg.rc
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/home/dotmutt/mailcap > /mnt/etc/skel/.mutt/mailcap
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/home/dotmutt/original-colors.muttrc > /mnt/etc/skel/.mutt/original-colors.muttrc
mkdir -p /mnt/etc/skel/.config/openbox
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/home/dotconfig/openbox/autostart > /mnt/etc/skel/.config/openbox/autostart
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/home/dotconfig/openbox/environment > /mnt/etc/skel/.config/openbox/environment
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/home/dotconfig/openbox/menu.xml > /mnt/etc/skel/.config/openbox/menu.xml
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/home/dotconfig/openbox/rc.xml > /mnt/etc/skel/.config/openbox/rc.xml
mkdir /mnt/etc/skel/.config/i3status
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/home/dotconfig/i3status/config > /mnt/etc/skel/.config/i3status/config
mkdir /mnt/etc/skel/.config/menus
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/home/dotconfig/menus/applications.menu > /mnt/etc/skel/.config/menus/applications.menu
mkdir /mnt/etc/skel/.config/dmenu
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/home/dotconfig/dmenu/dmenu-bind.sh > /mnt/etc/skel/.config/dmenu/dmenu-bind.sh
chmod +x /mnt/etc/skel/.config/dmenu/dmenu-bind.sh
mkdir /mnt/etc/skel/.config/nitrogen
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/home/dotconfig/nitrogen/bg-saved.cfg > /mnt/etc/skel/.config/nitrogen/bg-saved.cfg
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/home/dotconfig/nitrogen/nitrogen.cfg > /mnt/etc/skel/.config/nitrogen/nitrogen.cfg
mkdir /mnt/etc/skel/.config/tint2
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/home/dotconfig/tint2/tint2rc > /mnt/etc/skel/.config/tint2/tint2rc
mkdir /mnt/etc/skel/.config/lxterminal
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/home/dotconfig/lxterminal/lxterminal.conf > /mnt/etc/skel/.config/lxterminal/lxterminal.conf
mkdir /mnt/etc/skel/.config/terminator
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/home/dotconfig/terminator/config > /mnt/etc/skel/.config/terminator/config
mkdir /mnt/etc/skel/.config/volumeicon
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/home/dotconfig/volumeicon/volumeicon > /mnt/etc/skel/.config/volumeicon/volumeicon
mkdir -p /mnt/etc/skel/.Maildir/{cur,new,tmp}

echo "!!! Установка пароля для ROOT"

while [[ $ROOTPASS1 == '' ]] || [[ $ROOTPASS2 == '' ]] || [[ $ROOTPASS1 != $ROOTPASS2 ]]
do
    printf "ROOT password: "
    read -s ROOTPASS1
    printf "\n"
    printf "ROOT password (Type again): "
    read -s ROOTPASS2
    printf "\n"
    if [[ $ROOTPASS1 != $ROOTPASS2 ]]; then
        echo "Password entered isn't the same. Try again!"
    fi
    if [[ $ROOTPASS1 == '' ]] || [[ $ROOTPASS2 == '' ]]; then
        echo "ROOT password can't be empty!"
    fi
done

echo -e "$ROOTPASS1\n$ROOTPASS2" | arch-chroot /mnt /bin/bash -c "passwd"

while [[ $MYUSER1 == '' ]]
do
    read -p "Username: " MYUSER1
done
MYUSER=$(echo $MYUSER1 | tr -cd [:alnum:])

echo "Добавим своего пользователя (меняем username на свое) и добавляем его в нужные группы"
arch-chroot /mnt /bin/bash -c "useradd -m -k /etc/skel -g users -G audio,games,lp,optical,power,scanner,storage,video,wheel -s /bin/bash $MYUSER"
echo "Установим пароль для нашего юзера"
while [[ $USERPASS1 == '' ]] || [[ $USERPASS2 == '' ]] || [[ $USERPASS1 != $USERPASS2 ]]
do
    printf "$MYUSER's password: "
    read -s USERPASS1
    printf "\n"
    printf "$MYUSER's password (Type again): "
    read -s USERPASS2
    printf "\n"
    if [[ $USERPASS1 != $USERPASS2 ]]; then
        echo "Password entered isn't the same. Try again!"
    fi
    if [[ $USERPASS1 == '' ]] || [[ $USERPASS2 == '' ]]; then
        echo "User's password can't be empty!"
    fi
done
echo -e "$USERPASS1\n$USERPASS2" | arch-chroot /mnt /bin/bash -c "passwd $MYUSER"

#Добавим ему информацию GECOS:
arch-chroot /mnt /bin/bash -c "chfn victor3d"
	
# Настраиваем временную зону:
arch-chroot /mnt /bin/bash -c "ln -svf /usr/share/zoneinfo/Europe/Simferopol /etc/localtime"

echo "" >> /mnt/etc/pacman.conf
echo "[archlinuxfr]" >> /mnt/etc/pacman.conf
echo "SigLevel = Never" >> /mnt/etc/pacman.conf
echo "Server = http://repo.archlinux.fr/x86_64" >> /mnt/etc/pacman.conf
### Uncomment multilib for AUR
NUM=`awk '/\[multilib\]/{getline;getline;print NR}' /mnt/etc/pacman.conf`
NUM1=`expr $NUM - 2`
NUM2=`expr $NUM - 1`
sed -i "$NUM1,$NUM2 s/^#//" /mnt/etc/pacman.conf
###

arch-chroot /mnt /bin/bash -c "pacman -Suy --noconfirm"

echo "Настройка sudo на время установки"
#sed -i "s/# %wheel ALL=(ALL) ALL/%wheel ALL=(ALL) ALL/g" /mnt/etc/sudoers
sed -i "s/# %wheel ALL=(ALL) NOPASSWD: ALL/%wheel ALL=(ALL) NOPASSWD: ALL/g" /mnt/etc/sudoers

# LightDM
arch-chroot /mnt /bin/bash -c "systemctl enable lightdm"
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/etc/lightdm/lightdm-gtk-greeter.conf > /mnt/etc/lightdm/lightdm-gtk-greeter.conf
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/etc/oblogout.conf > /mnt/etc/oblogout.conf

mkdir -p /mnt/usr/share/icons
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/usr/share/icons/bunsen-lightdm.tar.gz > /mnt/usr/share/icons/bunsen-lightdm.tar.gz
tar xvfz /mnt/usr/share/icons/bunsen-lightdm.tar.gz -C /mnt/usr/share/icons
rm -f /mnt/usr/share/icons/bunsen-lightdm.tar.gz
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/usr/share/themes/bunsen-lightdm.tar.gz > /mnt/usr/share/themes/bunsen-lightdm.tar.gz
tar xvfz /mnt/usr/share/themes/bunsen-lightdm.tar.gz -C /mnt/usr/share/themes
rm -f /mnt/usr/share/themes/bunsen-lightdm.tar.gz

mkdir -p /mnt/usr/share/images
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/usr/share/images/flowery.jpg > /mnt/usr/share/images/flowery.jpg
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/usr/share/images/linen.png > /mnt/usr/share/images/linen.png
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/usr/share/images/BahamasAerial.jpg > /mnt/usr/share/images/BahamasAerial.jpg
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/usr/share/images/BluePond.jpg > /mnt/usr/share/images/BluePond.jpg
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/usr/share/images/ColorBurst1.jpg > /mnt/usr/share/images/ColorBurst1.jpg
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/usr/share/images/ColorBurst2.jpg > /mnt/usr/share/images/ColorBurst2.jpg
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/usr/share/images/ColorBurst3.jpg > /mnt/usr/share/images/ColorBurst3.jpg
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/usr/share/images/ElCapitan2.jpg > /mnt/usr/share/images/ElCapitan2.jpg
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/usr/share/images/HighSierra.jpg > /mnt/usr/share/images/HighSierra.jpg
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/usr/share/images/InkCloud.jpg > /mnt/usr/share/images/InkCloud.jpg
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/usr/share/images/Lake.jpg > /mnt/usr/share/images/Lake.jpg
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/usr/share/images/MilkyWay.jpg > /mnt/usr/share/images/MilkyWay.jpg
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/usr/share/images/Wave.jpg > /mnt/usr/share/images/Wave.jpg

curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/usr/local/bin/i3lock.sh > /mnt/usr/local/bin/i3lock.sh
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/usr/local/bin/mutt.sh > /mnt/usr/local/bin/mutt.sh
curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/usr/local/bin/i3exit > /mnt/usr/local/bin/i3exit
chmod +x /mnt/usr/local/bin/*

curl https://raw.githubusercontent.com/victor3dptz/arch-install/master/etc/X11/xorg.conf.d/00-keyboard.conf > /mnt/etc/X11/xorg.conf.d/00-keyboard.conf

# AUR
# Хак чтобы работал pacman в chroot
sed -i "s/CheckSpace/#CheckSpace/g" /mnt/etc/pacman.conf

echo "Установка yaourt"
arch-chroot -u $MYUSER /mnt /bin/bash -c "git clone https://aur.archlinux.org/package-query.git /home/$MYUSER/package-query; cd /home/$MYUSER/package-query; makepkg"
arch-chroot /mnt /bin/bash -c "pacman -U /home/$MYUSER/package-query/package-query*.xz --noconfirm"
rm -dR /mnt/home/$MYUSER/package-query/
arch-chroot -u $MYUSER /mnt /bin/bash -c "git clone https://aur.archlinux.org/yaourt.git /home/$MYUSER/yaourt; cd /home/$MYUSER/yaourt/; makepkg"
arch-chroot /mnt /bin/bash -c "pacman -U /home/$MYUSER/yaourt/yaourt*.xz --noconfirm"
rm -dR /mnt/home/$MYUSER/yaourt/

echo "Осталось немножко..."
# Bunsen Themes
#arch-chroot -u $MYUSER /mnt /bin/bash -c "git clone https://aur.archlinux.org/bunsen-themes-git.git /home/$MYUSER/bunsen-themes-git; cd /home/$MYUSER/bunsen-themes-git; makepkg"
#arch-chroot /mnt /bin/bash -c "pacman -U /home/$MYUSER/bunsen-themes-git/bunsen-themes-git*.xz --noconfirm"
#rm -dR /mnt/home/$MYUSER/bunsen-themes-git/

# Вернем взад настройку pacman
sed -i "s/#CheckSpace/CheckSpace/g" /mnt/etc/pacman.conf

set -xe
arch-chroot -u $MYUSER /mnt yaourt -S obmenu2-git i3-scrot fetchmail ttf-paratype surf openbox-themes tangerine-icon-theme oblogout adeos-oblogout-git ttf-ms-fonts bunsen-themes-git --noconfirm
if [[ $MAC == 'YES' ]]; then
arch-chroot -u $MYUSER /mnt yaourt -S mbpfan-git pommed-light hfsprogs thermald --noconfirm
arch-chroot /mnt /bin/bash -c "systemctl enable mbpfan.service"
arch-chroot /mnt /bin/bash -c "systemctl enable pommed.service"
arch-chroot /mnt /bin/bash -c "systemctl enable thermald.service"
#arch-chroot -u $MYUSER /mnt yaourt -S nvidia-340xx-dkms nvidia-bl-dkms --noconfirm
#arch-chroot /mnt /bin/bash -c "nvidia-xconfig"
fi
# yay install later
echo "Окончательная настройка sudo"
sed -i "s/# %wheel ALL=(ALL) ALL/%wheel ALL=(ALL) ALL/g" /mnt/etc/sudoers
sed -i "s/%wheel ALL=(ALL) NOPASSWD: ALL/# %wheel ALL=(ALL) NOPASSWD: ALL/g" /mnt/etc/sudoers

echo "Все готово! Перезагрузись и кайфуй!"

### https://wiki.archlinux.org/index.php/MacBookPro7,1
